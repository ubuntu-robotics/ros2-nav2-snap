name: ros2-nav2
version: '0.1'
license: Apache-2.0
summary: The ros2-nav2 navigation snap
description: |
  The snap provides mapping, localization and navigation capabilities.

  The ros2-nav2 snap is designed as a general package that offers navigation functionality for robots.
  To ensure maximum flexibility for users, it is intentionally provided without any preset configurations.

  The ros2-nav2 snap must be configured by means of snap parameters.
  The available configuration parameters are listed below:

    - simulation (string, default: "False")
    - slam-config (string, default: "")
    - map-saver-config (string, default: "")
    - map-yaml-path (string, default: "")
    - map (string, default="${SNAP_COMMON}/maps/current_map.yaml")
    - localization-config (string, default: "")
    - navigation-config (string, default: "")

    The slam-config, localization-config, and navigation-config parameters
    are essential for the proper functioning of these applications.

    These parameters must be set either to a local configuration file accessible
    within the SNAP environment (such as $SNAP_COMMON), or to a URL hosting the desired configuration.

    Additionally, a set of configuration_templates is available at $SNAP_COMMON/configuration_templates.
    Those files are only meant to be a template, they can be modified and used by setting them to the parameters
    (e.g. snap set ros2-nav2 slam-config="/var/snap/ros2-nav2/common/configuration_templates/slam_params_template.yaml").

    In case you want to reinitialize the templates, you can simply issue the following command:
      ros2-nav2.reset-config-templates

    As mentioned, those parameters can also be can also be configured with a URL as follows:

    snap set ros2-nav2 <app-name>-config="https://raw.githubusercontent.com/robot-repo/<app-name>_params.yaml"

    Note: the URL must be reachable by the snap. When using a URL, the configuration file will be downloaded everytime the app is launched.
    Therefore a configuration update upstream will be applied with the application relaunch.

  The mapping application can be launched as,

    snap start ros2-nav2.slam

  After launching the app, simply drive the robot around until you've mapped the area.
  Once finished, stop the mapping with,

    snap stop ros2-nav2.slam

  This will terminate the mapping and automatically
  save the map in '${SNAP_COMMON}/maps/new_map.{yaml,png}'.

  If mapping is not required, a map can also be loaded via the `map-yaml-path` parameter.
  The parameter can either be set to a local file with:

    snap set ros2-nav2 map-yaml-path="$SNAP_COMMON/maps/map.yaml"
  
  Or by means of a URL with:

    snap set ros2-nav2 map-yaml-path="https://raw.githubusercontent.com/robot-repo/map.yaml"
  
  The image associated to the map is automatically extracted from the yaml file.

  With the environment mapped, one can make use of the autonomous navigation.
  To do so, start the localisation and navigation with:

    snap start ros2-nav2.localization
    snap start ros2-nav2.navigation

  Those application can be then stopped with:

    snap stop ros2-nav2.localization
    snap stop ros2-nav2.navigation

grade: stable
confinement: strict
base: core24

contact: https://github.com/ubuntu-robotics/ros2-nav2/issues
issues: https://github.com/ubuntu-robotics/ros2-nav2/issues

platforms:
  amd64:
  arm64:

hooks:
  configure:
    plugs: [network]

apps:
  localization:
    command: usr/bin/localization_launcher.sh
    command-chain: [usr/bin/map_loader.sh]
    daemon: simple
    install-mode: disable
    plugs: [network, network-bind]
    extensions: [ros2-jazzy-desktop]

  navigation:
    command: usr/bin/navigation_launcher.sh
    command-chain: [usr/bin/mux_select_nav_vel.sh]
    daemon: simple
    install-mode: disable
    plugs: [network, network-bind]
    extensions: [ros2-jazzy-desktop]

  reset-config-templates:
    command: usr/bin/reset_config.sh

  slam:
    command: usr/bin/slam_launcher.sh
    daemon: simple
    install-mode: disable
    stop-command: usr/bin/save_map.sh
    post-stop-command: usr/bin/slam_post_stop.sh
    plugs: [network, network-bind]
    extensions: [ros2-jazzy-desktop]

parts:
  ros2-nav2:
    plugin: colcon
    source: .
    stage-packages:
      - wget
      - libssl3

  scripts:
    plugin: dump
    source: snap/local/
    organize:
      '*.sh': usr/bin/
  configuration-templates:
    plugin: dump
    source: snap/local/configuration_templates/
    organize:
      '*.yaml': usr/share/ros2-nav2/configuration_templates/
