name: snap
on:
  push:
    branches:
      - jazzy
  pull_request:
    branches:
      - jazzy
  workflow_dispatch:
  workflow_call:
   inputs:
      branch-name:
        required: false
        type: string
        default: ''

jobs:
  snap:
    uses: ubuntu-robotics/snap_workflows/.github/workflows/snap.yaml@main
    secrets:
      store-login: ${{ secrets.STORE_LOGIN }}
    with:
      branch-name: ${{ inputs.branch-name == '' && github.ref || inputs.branch-name }}
      snap-name: ros2-nav2
      enable-experimental-extensions-env: true
      publish: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
      publish-track: jazzy
      test-script: |
                    #!/bin/bash

                    check_existence() {
                      local topic_or_node="${1}"
                      local name="${2}"
                      local timeout="${3}"
                      local start_time=$(date +%s)

                      function is_running {
                        local topic_or_node="${1}"
                        local name="${2}"
                        (ros2 $topic_or_node list | grep -q "$name")
                        return $?
                      }


                      while true; do

                        if is_running "${topic_or_node}" "${name}" ; then
                          echo "${name} is running."
                          return 0
                        fi

                        local current_time=$(date +%s)
                        local elapsed_time=$((current_time - start_time))

                        if [ $elapsed_time -ge $timeout ]; then
                          echo "Error $name is not running."
                          exit 1
                        fi
                        sleep 1
                      done
                    }

                    ## Install ROS 2 cli
                    sudo snap install ros2-cli --channel=jazzy/beta
                    ## Install ros2-teleop necessary for the mux service
                    # TODO replace with humble/stable once released
                    sudo snap install ros2-teleop --channel=latest/edge
                    sudo snap set ros2-teleop nav-vel="cmd_vel_nav"

                    ## Set a slam config
                    sudo snap set ros2-nav2 slam-config=https://raw.githubusercontent.com/ubuntu-robotics/ros2-nav2-snap/main/snap/local/configuration_templates/slam_params_template.yaml

                    ## Test slam application
                    sudo snap start ros2-nav2.slam
                    check_existence topic map 30
                    check_existence node slam_toolbox 30
                    check_existence node map_saver 30
                    sudo snap stop ros2-nav2.slam

                    ## Load map
                    sudo snap set ros2-nav2 map-yaml-path=https://raw.githubusercontent.com/ros-navigation/navigation2/humble/nav2_bringup/maps/turtlebot3_world.yaml

                    ## Set localization configuration
                    sudo snap set ros2-nav2 localization-config=https://raw.githubusercontent.com/ubuntu-robotics/ros2-nav2-snap/main/snap/local/configuration_templates/localization_params_template.yaml

                    ## Test localization application
                    sudo snap start ros2-nav2.localization
                    check_existence node map_server 30
                    check_existence node amcl 30
                    sudo snap stop ros2-nav2.localization

                    ## Check map has been downloaded
                    map_location="/root/snap/ros2-nav2/common/maps/turtlebot3_world.yaml"

                    if [ -n "$map_location" ]; then
                      echo "Map found"
                    else
                      echo "Could not find map at $map_location"
                      exit 1
                    fi             

                    ## Set navigation configuration
                    sudo snap set ros2-nav2 navigation-config=https://raw.githubusercontent.com/ubuntu-robotics/ros2-nav2-snap/main/snap/local/configuration_templates/nav2_params_template.yaml

                    ## Test navigation configuration
                    sudo snap start ros2-nav2.navigation
                    check_existence node lifecycle_manager_navigation 30
                    check_existence node bt_navigator 30
                    check_existence topic cmd_vel_nav 30
                    sudo snap stop ros2-nav2.navigation
